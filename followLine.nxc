#include "_defines.nxc"
#include "_move.nxc"
#include "_sensor.nxc"
#include "_debug.nxc"
#include "_generic.nxc"

void GreenMove (bool dir) {
  RotateMotor(MOTOR_BOTH, -NORMAL_SPEED, 250);
  Move(0,0);

  ResetRotationCount(MOTOR_LEFT);
  Wait(1);
  MoveDir(dir, MOVE_INNER);
  until (abs(MotorRotationCount(MOTOR_LEFT)) > 500);
  Move(0,0);

  RotateMotor(MOTOR_BOTH, -NORMAL_SPEED, 100);

  ResetRotationCount(MOTOR_LEFT);
  Wait(1);
  MoveDir(dir, MOVE_INNER);
  until (abs(MotorRotationCount(MOTOR_LEFT)) > 200);
  Move(0,0);

  MoveDir(!dir, MOVE_INNER);
  until(Update() && Debug() && sens[dir] == COLOR_BLACK);
  MoveDir(dir, MOVE_INNER);
  until(Update() && Debug() && sens[dir] != COLOR_BLACK);
}

void OuterMove (bool dir) {
  RotateMotor(MOTOR_BOTH, -NORMAL_SPEED, 150);
  Move(0,0);

  MoveDir(dir, MOVE_INNER);
  until(Update() && Debug() && sens[!dir] == COLOR_BLACK);
  MoveDir(!dir, MOVE_INNER);
  until(Update() && Debug() && sens[!dir] != COLOR_BLACK);
}

void AvoidObstacle () {
  MoveRot(260, MOVE_BACKWARD);
  MoveRot(450, MOVE_LEFT);
  Move(1.5*NORMAL_SPEED, 0.5*NORMAL_SPEED);
  until(Update() && sens[RIGHT] == COLOR_BLACK);
  MoveRot(200, MOVE_FORWARD);
  Move(MOVE_LEFT);
  until(Update() && sens[RIGHT] == COLOR_BLACK);
  MoveRot(260, MOVE_BACKWARD);
}

void FollowLine () {
  if (Sensor(SENS_PORT_FRONT_BUMP) == 1) {
    AvoidObstacle();
  }

  if (sens[LEFT] == COLOR_GREEN) {
    VisualDebug(VDEBUG_GREEN_LEFT);
    GreenMove(LEFT);
  } else if (sens[RIGHT] == COLOR_GREEN) {
    VisualDebug(VDEBUG_GREEN_RIGHT);
    GreenMove(RIGHT);
  }

  else if (sensOuter[LEFT] == COLOR_BLACK) {
    VisualDebug(VDEBUG_OUTER_LEFT);
    OuterMove(LEFT);
  } else if (sensOuter[RIGHT] == COLOR_BLACK) {
    VisualDebug(VDEBUG_OUTER_RIGHT);
    OuterMove(RIGHT);
  }

  else if (sens[LEFT] == COLOR_BLACK && sens[RIGHT] == COLOR_BLACK) {
    VisualDebug(VDEBUG_FORWARD);
    Move(MOVE_FORWARD);
  } else if (sens[LEFT] == COLOR_BLACK) {
    VisualDebug(VDEBUG_LEFT);
    Move(MOVE_LEFT);
  } else if (sens[RIGHT] == COLOR_BLACK) {
    VisualDebug(VDEBUG_RIGHT);
    Move(MOVE_RIGHT);
  }

  else {
    VisualDebug(VDEBUG_FORWARD);
    Move(MOVE_FORWARD);
  }
}

task main () {
  Setup();
  while (Update()) {
    Debug();
    FollowLine();
    ToggleMode();
  }
}
