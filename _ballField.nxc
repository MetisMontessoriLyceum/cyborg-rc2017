void FindBall () {
  ResetRotationCount(MOTOR_LEFT);
  Wait(1);

  Move(40, 40);
  int lastDist;
  int diff;
  do {
    if (sensBumper[CENTER]) {
      MoveRot(200, MOVE_BACKWARD);
      MoveRot(500, MOVE_RIGHT);
      Move(0,0);
      ResetRotationCount(MOTOR_LEFT);
      Wait(1);
      Move(40, 40);
    }

    lastDist = DISTNxDistance(SENS_PORT_DIST_IR, 0x02);
    Wait(200);

    diff = DISTNxDistance(SENS_PORT_DIST_IR, 0x02) - lastDist;
    ClearLine(LCD_LINE1);
    NumOut(0, LCD_LINE1, diff);
    NumOut(50, LCD_LINE1, MotorRotationCount(MOTOR_LEFT));
  } while (Update() && (diff > -100 || abs(MotorRotationCount(MOTOR_LEFT)) < 200)); // we are only intrested when something comes closer

  Move(0,0);
}

void GrabBall () {
  ResetRotationCount(OUT_C);
  Wait(1);
  Move(MOVE_BACKWARD);

  long lastMrc;
  long mrc;
  bool wasFast = false;
  do {
    lastMrc = abs(MotorRotationCount(OUT_C));
    Wait(400);
    mrc = abs(MotorRotationCount(OUT_C));
    ClearLine(LCD_LINE1);
    NumOut(0,LCD_LINE1,mrc - lastMrc);
    if (mrc - lastMrc > 150) wasFast = true;
  } while (!wasFast || mrc - lastMrc > 100)
  Move(0,0);
  MoveRot(50, MOVE_FORWARD);
  Move(0,0);

  OnFwd(MOTOR_GRABBER, 40);
  Wait(200);
  MoveRot(200,MOVE_FORWARD);
  Float(MOTOR_GRABBER);
  Move(0,0);
}

void BallRoutine () {
  Move(0,0);
  OnFwd(MOTOR_GRABBER, -40);
  Wait(150);
  Float(MOTOR_GRABBER);

  MoveRot(700, MOVE_FORWARD);
  Move(0,0);
  if (SensorUS(SENS_PORT_DIST_US) > 30) {
    MoveRot(500, MOVE_LEFT);
    Move(MOVE_BACKWARD);
    unsigned long lastMrc;
    unsigned long mrc;
    bool wasFast = false;
    do {
      lastMrc = abs(MotorRotationCount(OUT_C));
      Wait(400);
      mrc = abs(MotorRotationCount(OUT_C));
      ClearLine(LCD_LINE1);
      NumOut(0,LCD_LINE1,mrc - lastMrc);
      if (mrc - lastMrc > 30) wasFast = true;
    } while (!wasFast || mrc - lastMrc > 20)
  }
  Move(0,0);

  FindBall();

  MoveRot(50, MOVE_FORWARD);
  Move(0,0);
  MoveRot(500, MOVE_LEFT);
  Move(0,0);
  Move(100,100);
  until(Update() && sensBumper[CENTER]);
  Wait(500);
  Move(0,0);

  GrabBall();

  FollowWall(RIGHT, STOP_ON_BALLDUMP);

  MoveRot(800, NORMAL_SPEED*0.7, -NORMAL_SPEED);
  MoveRot(200, MOVE_BACKWARD);
  Move(0,0);

  OnFwd(MOTOR_GRABBER, -40);
  Wait(200);
  Float(MOTOR_GRABBER);
}
